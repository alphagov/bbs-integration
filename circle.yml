machine:
    python:
        version: 2.7.10
    ruby:
        version: 2.2.6
    services:
        - docker
    environment:
        NOSE_FILTER: 'not windows and not fixme'
        VOLATILE_DIR: '/tmp/integration-sdk-testing'
        SKIP_CLEANUP: 'true'
        INTEGRATIONS_DIR: "$HOME/embedded"
        PIP_CACHE: "$HOME/.cache/pip"
        SDK_TESTING: "true"
        DD_AGENT_BRANCH: "master"
        CORE_BRANCH: "master"
        REQ_LOCALS: "$HOME/$CIRCLE_PROJECT_REPONAME,$HOME/dd-agent,$HOME/integrations-core"

dependencies:
    pre:
        - sudo apt-get update ; sudo apt-get install -y curl apt-transport-https git
        - git -C $HOME/dd-agent pull || git clone -b $DD_AGENT_BRANCH --depth 1 https://github.com/DataDog/dd-agent.git $HOME/dd-agent
        - git -C $HOME/integrations-core pull || git clone -b $CORE_BRANCH --depth 1 https://github.com/DataDog/integrations-core.git $HOME/integrations-core
        - echo "$HOME/dd-agent/" > $(dirname $(pyenv which python))/../lib/python2.7/site-packages/datadog-agent.pth
        - pip install pip --upgrade
        - pip install docker-compose
        - pip install pylint
        - if [ -e ~/$CIRCLE_PROJECT_REPONAME/requirements.txt ]; then pip install -r ~/$CIRCLE_PROJECT_REPONAME/requirements.txt; fi
        - if [ -e ~/$CIRCLE_PROJECT_REPONAME/requirements-test.txt ]; then pip install -r ~/$CIRCLE_PROJECT_REPONAME/requirements-test.txt; fi
        - if [ -e ~/$CIRCLE_PROJECT_REPONAME/requirements-opt.txt ]; then pip install -r ~/$CIRCLE_PROJECT_REPONAME/requirements-opt.txt; fi
        - if [ -e ~/dd-agent/requirements.txt ]; then pip install -r ~/dd-agent/requirements.txt; fi
        - if [ -e ~/$CIRCLE_PROJECT_REPONAME/Gemfile ]; then cd ~/$CIRCLE_PROJECT_REPONAME ; bundle install; cd - ; fi

test:
    override:
        - bundle exec rake prep_travis_ci
        - rake ci:run[default]
        - rake ci:run[bbs]
        - bundle exec rake requirements
    post:
        - if [[ $(docker ps -a -q) ]]; then docker stop $(docker ps -a -q); fi
